[versions]
assertk = "0.25"
gradle-plugin-detekt = "1.22.0"
gradle-plugin-versionCatalogUpdate = "0.7.0"
gradle-plugin-versions = "0.45.0"
gradle-plugin-versionsFilter = "0.1.16"
junit = "5.9.2"
kotest = "5.6.1"
kotlin = "1.8.20"
kotlinx-coroutines = "1.7.0-Beta"
kotlin-logging = "3.0.5"
log4j2 = "2.20.0"
mockk = "1.13.4"
slf4j = "2.0.7"

[libraries]
clikt = "com.github.ajalt.clikt:clikt:3.5.1"
config-config4k = "io.github.config4k:config4k:0.5.0"
config-typesafe = "com.typesafe:config:1.4.2"
gradle-plugin-detekt = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "gradle-plugin-detekt" }
gradle-plugin-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
gradle-plugin-kotlinxSerialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
gradle-plugin-versionCatalogUpdate = { module = "nl.littlerobots.vcu:plugin", version.ref = "gradle-plugin-versionCatalogUpdate" }
gradle-plugin-versions = { module = "com.github.ben-manes:gradle-versions-plugin", version.ref = "gradle-plugin-versions" }
gradle-plugin-versionsFilter = { module = "se.ascp.gradle:gradle-versions-filter", version.ref = "gradle-plugin-versionsFilter" }
jetbrains-annotations = "org.jetbrains:annotations:24.0.0"
kfsm = "io.jumpco.open:kfsm-jvm:1.6.1"
kotlinx-atomicfu = "org.jetbrains.kotlinx:atomicfu:0.20.2"
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-debug = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-debug", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-javafx = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-javafx", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-jdk8 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-jdk9 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk9", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-reactive = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactive", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-rx2 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-rx2", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-rx3 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-rx3", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
kotlinx-datetime = "org.jetbrains.kotlinx:kotlinx-datetime:0.4.0"
logging-log4j-adapter-jul = { module = "org.apache.logging.log4j:log4j-jul", version.ref = "log4j2" }
logging-log4j-api-core = { module = "org.apache.logging.log4j:log4j-api", version.ref = "log4j2" }
logging-log4j-api-kotlin = "org.apache.logging.log4j:log4j-api-kotlin:1.2.0"
logging-log4j-appender-nosql-cassandra = { module = "org.apache.logging.log4j:log4j-cassandra", version.ref = "log4j2" }
logging-log4j-appender-nosql-couchdb = { module = "org.apache.logging.log4j:log4j-couchdb", version.ref = "log4j2" }
logging-log4j-appender-nosql-mongodb = { module = "org.apache.logging.log4j:log4j-mongodb", version.ref = "log4j2" }
logging-log4j-bridge-jcl = { module = "org.apache.logging.log4j:log4j-jcl", version.ref = "log4j2" }
logging-log4j-bridge-log4j12 = { module = "org.apache.logging.log4j:log4j-1.2-api", version.ref = "log4j2" }
logging-log4j-bridge-slf4j = { module = "org.apache.logging.log4j:log4j-slf4j-impl", version.ref = "log4j2" }
logging-log4j-bridge-slf4j2 = { module = "org.apache.logging.log4j:log4j-slf4j2-impl", version.ref = "log4j2" }
logging-log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j2" }
logging-log4j-iostreams = { module = "org.apache.logging.log4j:log4j-iostreams", version.ref = "log4j2" }
logging-log4j-redirect-slf4j = { module = "org.apache.logging.log4j:log4j-to-slf4j", version.ref = "log4j2" }
logging-log4j-taglib = { module = "org.apache.logging.log4j:log4j-taglib", version.ref = "log4j2" }
logging-log4j-web = { module = "org.apache.logging.log4j:log4j-web", version.ref = "log4j2" }
logging-slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
logging-slf4j-binding-android = { module = "org.slf4j:slf4j-android", version.ref = "slf4j" }
logging-slf4j-binding-jcl = { module = "org.slf4j:slf4j-jcl", version.ref = "slf4j" }
logging-slf4j-binding-jul = { module = "org.slf4j:slf4j-jdk14", version.ref = "slf4j" }
logging-slf4j-binding-log4j12 = { module = "org.slf4j:slf4j-log4j12", version.ref = "slf4j" }
logging-slf4j-binding-nop = { module = "org.slf4j:slf4j-nop", version.ref = "slf4j" }
logging-slf4j-binding-reload4j = { module = "org.slf4j:slf4j-reload4j", version.ref = "slf4j" }
logging-slf4j-binding-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
logging-slf4j-ext = { module = "org.slf4j:slf4j-ext", version.ref = "slf4j" }
logging-slf4j-interceptor-jcl = { module = "org.slf4j:jcl-over-slf4j", version.ref = "slf4j" }
logging-slf4j-interceptor-jul = { module = "org.slf4j:jul-to-slf4j", version.ref = "slf4j" }
logging-slf4j-interceptor-log4j = { module = "org.slf4j:log4j-over-slf4j", version.ref = "slf4j" }
logging-slf4j-interceptor-osgi = { module = "org.slf4j:osgi-over-slf4j", version.ref = "slf4j" }
michaelBull-kotlin-result = "com.michael-bull.kotlin-result:kotlin-result:1.1.17"
microutils-kotlin-logging = { module = "io.github.microutils:kotlin-logging", version.ref = "kotlin-logging" }
mordant = "com.github.ajalt.mordant:mordant:2.0.0-beta11"
square-okio = "com.squareup.okio:okio:3.3.0"
sshj = "com.hierynomus:sshj:0.35.0"
test-assertk-common = { module = "com.willowtreeapps.assertk:assertk", version.ref = "assertk" }
test-assertk-jvm = { module = "com.willowtreeapps.assertk:assertk-jvm", version.ref = "assertk" }
test-junit-all = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
test-junit-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
test-junit-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
test-junit-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit" }
test-kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
test-kotest-assertions-core-jvm = { module = "io.kotest:kotest-assertions-core-jvm", version.ref = "kotest" }
test-kotest-assertions-collections = { module = "io.kotest:kotest-assertions-collections", version.ref = "kotest" }
test-kotest-assertions-collections-jvm = { module = "io.kotest:kotest-assertions-collections-jvm", version.ref = "kotest" }
test-kotest-assertions-json = { module = "io.kotest:kotest-assertions-json", version.ref = "kotest" }
test-kotest-assertions-kotlinx-time = { module = "io.kotest:kotest-assertions-kotlinx-time", version.ref = "kotest" }
test-kotest-assertions-kotlinx-time-jvm = { module = "io.kotest:kotest-assertions-kotlinx-time-jvm", version.ref = "kotest" }
test-kotest-assertions-sql = { module = "io.kotest:kotest-assertions-sql", version.ref = "kotest" }
test-kotest-extensions-junitxml = { module = "io.kotest.extensions:kotest-extensions-junitxml", version.ref = "kotest" }
test-kotest-extensions-htmlreporter = { module = "io.kotest.extensions:kotest-extensions-htmlreporter", version.ref = "kotest" }
test-kotest-extensions-mockserver = "io.kotest.extensions:kotest-extensions-mockserver:1.2.1"
test-kotest-extensions-testcontainers = "io.kotest.extensions:kotest-extensions-testcontainers:1.3.4"
test-kotest-extensions-spring = "io.kotest.extensions:kotest-extensions-spring:1.1.3"
test-kotest-extensions-koin = "io.kotest.extensions:kotest-extensions-koin:1.1.0"
test-kotest-extensions-ktor = "io.kotest.extensions:kotest-assertions-ktor:2.0.0"
test-kotest-extensions-wiremock = "io.kotest.extensions:kotest-extensions-wiremock:2.0.0"
test-kotest-extensions-pitest = "io.kotest.extensions:kotest-extensions-pitest:1.2.0"
test-kotest-extensions-allure = "io.kotest.extensions:kotest-extensions-allure:1.2.0"
test-kotest-framework-datatest = { module = "io.kotest:kotest-framework-datatest", version.ref = "kotest" }
test-kotest-framework-datatest-jvm = { module = "io.kotest:kotest-framework-datatest-jvm", version.ref = "kotest" }
test-kotest-framework-engine = { module = "io.kotest:kotest-framework-engine", version.ref = "kotest" }
test-kotest-framework-engine-jvm = { module = "io.kotest:kotest-framework-engine-jvm", version.ref = "kotest" }
test-kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
test-kotest-runner-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
test-mockk-common = { module = "io.mockk:mockk", version.ref = "mockk" }
test-mockk-jvm = { module = "io.mockk:mockk-jvm", version.ref = "mockk" }

[bundles]
commonTest-common = [
    "test-assertk-common",
    "test-kotest-framework-datatest",
    "test-kotest-framework-engine",
    # "test-mockk-common",
]
commonTest-jvm = [
    "test-assertk-jvm",
    "test-junit-all",
    "test-kotest-framework-datatest-jvm",
    "test-kotest-framework-engine-jvm",
    "test-kotest-runner-junit5",
    "test-mockk-jvm",
]

[plugins]
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "gradle-plugin-detekt" }
dokka = { id = "org.jetbrains.dokka", version.ref = "kotlin" }
kotest-multiplatform = { id = "io.kotest.multiplatform", version.ref = "kotest" }
kotlin-js = { id = "org.jetbrains.kotlin.js", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin-plugin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-plugin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlin-plugin-allopen = { id = "org.jetbrains.kotlin.plugin.allopen", version.ref = "kotlin" }
kotlin-plugin-noarg = { id = "org.jetbrains.kotlin.plugin.noarg", version.ref = "kotlin" }
kotlin-plugin-samWithReceiver = { id = "org.jetbrains.kotlin.plugin.sam.with.receiver", version.ref = "kotlin" }
versionCatalogUpdate = { id = "nl.littlerobots.version-catalog-update", version.ref = "gradle-plugin-versionCatalogUpdate" }
versions = { id = "com.github.ben-manes.versions", version.ref = "gradle-plugin-versions" }
versionsFilter = { id = "se.ascp.gradle.gradle-versions-filter", version.ref = "gradle-plugin-versionsFilter" }
